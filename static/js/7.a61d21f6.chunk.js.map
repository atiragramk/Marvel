{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPages.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ComicsList","useState","comicsData","setComicsData","loadingMore","setLoadingMore","offset","setOffset","comicEnded","setComicEnded","useMarvelServices","loading","error","getComics","useEffect","updateComics","onComicsLoaded","comicsDataMore","ended","length","initial","then","items","arr","comics","map","i","price","title","thumbnail","id","homepage","className","to","src","alt","renderItems","errorMessage","ErrorMessage","spinner","Spinner","tyle","disabled","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"gNAsFeA,EA7EI,WAGf,MAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAChC,EAAsCF,oBAAS,GAAM,mBAA9CG,EAAW,KAAEC,EAAc,KAClC,EAA4BJ,mBAAS,IAAG,mBAAjCK,EAAM,KAAEC,EAAS,KACxB,EAAoCN,oBAAS,GAAM,mBAA5CO,EAAU,KAAEC,EAAa,KAEhC,EAAqCC,cAA9BC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAEvBC,qBAAU,WACNC,EAAaT,GAAQ,KACtB,IAEH,IAAMU,EAAiB,SAACC,GACpB,IAAIC,GAAQ,EACRD,EAAeE,OAAS,IACxBD,GAAQ,GAEZf,GAAc,SAAAD,GAAU,4BAAQA,GAAU,YAAKe,OAC/CZ,GAAe,GACfE,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BG,EAAcS,IAGZH,EAAe,SAACT,EAAQc,GAChBf,GAAVe,GACAP,EAAUP,GACLe,KAAKL,IA0Bd,IAAMM,EAvBN,SAAsBC,GAClB,IAAMC,EAASD,EAAIE,KAAI,WAA0CC,GAAO,IAA/CC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAqBC,GAAF,EAARC,SAAY,EAAFD,IAGxD,OACI,oBAAYE,UAAU,eAAc,SAC5B,eAAC,IAAI,CAACC,GAAE,YAAOH,GAAK,UAChB,qBAAKI,IAAKL,EAAWM,IAAI,eAAeH,UAAU,qBAClD,qBAAKA,UAAU,oBAAmB,SAAEJ,IACpC,qBAAKI,UAAU,qBAAoB,SAAEL,QAJxCD,MAUjB,OACI,oBAAIM,UAAU,eAAc,SACvBR,IAMCY,CAAYlC,GACpBmC,EAAezB,EAAQ,cAAC0B,EAAA,EAAY,IAAK,KACzCC,EAAU5B,IAAYP,EAAc,cAACoC,EAAA,EAAO,IAAK,KAIvD,OACI,sBAAKR,UAAU,eAAc,UACxBK,EACAE,EACAjB,EAED,wBACAmB,KAAM,CAAC,QAAYjC,EAAa,OAAS,SACzCkC,SAAUtC,EACVuC,QAAS,kBAAM5B,EAAaT,IAC5B0B,UAAU,mCAAkC,SACxC,qBAAKA,UAAU,QAAO,SAAC,oB,QC1DxBY,UAlBI,WAEf,OACI,qCAEI,eAACC,EAAA,EAAM,WACH,sBACIC,KAAK,cACLC,QAAQ,qBAEZ,gCAAO,mBAEX,cAACC,EAAA,EAAS,IACV,cAAC,EAAU,S,wFCbR,SAASC,EAAmB1B,GACzC,OCJa,SAA4BA,GACzC,GAAI2B,MAAMC,QAAQ5B,GAAM,OAAO,OAAA6B,EAAA,GAAiB7B,GDGzC,CAAkBA,IELZ,SAA0B8B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB9B,IAAQ,OAAAmC,EAAA,GAA2BnC,IGLvE,WACb,MAAM,IAAIoC,UAAU,wIHIwE","file":"static/js/7.a61d21f6.chunk.js","sourcesContent":["import useMarvelServices from '../../services/MarvelServices';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n\n    const [comicsData, setComicsData] = useState([]);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [offset, setOffset] = useState(50);\n    const [comicEnded, setComicEnded] = useState(false);\n\n    const {loading, error, getComics} =  useMarvelServices();\n\n    useEffect(() => {\n        updateComics(offset, true);\n    }, [])\n\n    const onComicsLoaded = (comicsDataMore) => {\n        let ended = false;\n        if (comicsDataMore.length < 8) {\n            ended = true;\n        }\n        setComicsData(comicsData => [...comicsData, ...comicsDataMore]);\n        setLoadingMore(false);\n        setOffset(offset => offset + 8);\n        setComicEnded(ended)\n    }\n\n    const updateComics = (offset, initial) => {\n        initial ? setLoadingMore(false) : setLoadingMore(true);\n        getComics(offset)\n            .then(onComicsLoaded);\n    }\n\n    function renderItems (arr) {\n        const comics = arr.map(({price, title, thumbnail, homepage, id}, i) => {\n\n        \n            return (\n                <li key={i} className=\"comics__item\">\n                        <Link to={`./${id}`}>\n                            <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{title}</div>\n                            <div className=\"comics__item-price\">{price}</div>\n                        </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {comics}\n            </ul>\n\n        )\n    }\n    \n    const items = renderItems(comicsData);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !loadingMore ? <Spinner/> : null;\n\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            \n            <button \n            tyle={{'display' : comicEnded ? 'none' : 'block'}}\n            disabled={loadingMore}\n            onClick={() => updateComics(offset)} \n            className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import {Helmet} from \"react-helmet\";\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\"\n\nconst ComicsPage = () => {\n\n    return (\n        <>\n\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Comics list page\"\n                    />\n                <title>Comics Page</title>\n            </Helmet>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage ","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}